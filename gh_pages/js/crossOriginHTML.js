// Generated by CoffeeScript 1.9.3
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.getCrossHTML = function(url, callback) {
    var yql;
    yql = "http://query.yahooapis.com/v1/public/yql?q=" + encodeURIComponent("select * from html where url='" + url + "'") + "&format=xml&callback=?";
    return $.ajax({
      dataType: 'json',
      url: yql,
      success: function(data) {
        return callback(data.results[0]);
      }
    });
  };

  root.getTitlesFromSpringfield = function(name, callback) {
    var url;
    url = 'http://www.springfieldspringfield.co.uk/tv_show_episode_scripts.php?search=' + encodeURIComponent(name);
    return getCrossHTML(url, function(htmlStr) {
      var html, jQitems;
      html = $.parseHTML(htmlStr);
      jQitems = $(html).find('.script-list-item').map(function() {
        var val;
        val = $(this).attr('href').match(/.*tv-show=(.*)/)[1];
        name = $(this).text();
        return {
          'val': val,
          'name': name
        };
      });
      return callback(jQitems.toArray());
    });
  };

  root.getEpisodesFromSpringfield = function(name, callback) {
    var url;
    url = 'http://www.springfieldspringfield.co.uk/episode_scripts.php?tv-show=' + name;
    return getCrossHTML(url, function(htmlStr) {
      var html, jQitems;
      html = $.parseHTML(htmlStr);
      jQitems = $(html).find('.season-episode-title').map(function() {
        var e, s, val;
        val = $(this).attr('href');
        s = parseInt(val.match(/\&episode\=s(\d*)/)[1]).toString();
        e = parseInt(val.match(/\&episode\=s\d*e(\d*)/)[1]).toString();
        name = $(this).text().match(/\-\ (.*)$/)[1];
        return {
          'val': val,
          'name': "s" + s + " e" + e + " - " + name
        };
      });
      return callback(jQitems.toArray());
    });
  };

  root.getSubtitle = function(path, callback) {
    var url;
    url = 'http://www.springfieldspringfield.co.uk/' + path;
    return getCrossHTML(url, function(htmlStr) {
      var html;
      html = $.parseHTML(htmlStr);
      return callback($(html).find('.scrolling-script-container').text());
    });
  };

  root.getTitlesFromTVOnline = function(name, callback) {
    var url;
    url = 'http://tvonline.tw/search.php?key=' + encodeURIComponent(name);
    return getCrossHTML(url, function(htmlStr) {
      var html, jQitems;
      html = $.parseHTML(htmlStr);
      jQitems = $(html).find('.found a').map(function() {
        var val;
        val = $(this).attr('href').match(/(.*)\//)[1];
        name = $(this).text();
        return {
          'val': val,
          'name': name
        };
      });
      return callback(jQitems.toArray());
    });
  };

  root.getEpisodesFromTVOnline = function(name, callback) {
    var url;
    url = "http://tvonline.tw/" + name + "/";
    return getCrossHTML(url, function(htmlStr) {
      var html, jQitems;
      html = $.parseHTML(htmlStr);
      jQitems = $(html).find('.Season ul a').map(function() {
        var e, s, val;
        val = $(this).attr('href');
        s = val.match(/season-([^\-]*)-/)[1];
        e = val.match(/episode-(.*)\/$/)[1];
        name = $(this).text().match(/\-\ (.*)$/)[1];
        return {
          'val': val,
          'name': "s" + s + " e" + e + " - " + name
        };
      });
      return callback(jQitems.toArray());
    });
  };

  root.getEmbedVideos = function(name, callback) {
    var url;
    url = "http://tvonline.tw/" + name;
    return getCrossHTML(url, function(htmlStr) {
      var html, jQitems;
      html = $.parseHTML(htmlStr);
      jQitems = $(html).find('#linkname_nav a').map(function() {
        var val;
        val = $(this).attr('onclick').match(/'(.*)'/)[1];
        name = $(this).text();
        return {
          'val': val,
          'name': name
        };
      });
      return callback(jQitems.toArray());
    });
  };

}).call(this);
